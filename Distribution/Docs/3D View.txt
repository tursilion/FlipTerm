The 3d View Plugin for FlipTerm permits every room on your muck to have a scrollable panoramic display. It's a non-intrusive, clever effect that enhances your system

This plugin requires FlipTerm, although it may be possible to convert the system for other clients. Full source code is included.

This plugin is under the effect of the LGPL, due to the JPG reading code. See the source folder for licensing permissions. This plugin may also contain work by the Independent Jpeg Group.

Client Use
----------
To use the plugin, copy it to your FlipTerm plugins folder. On first run, you will be requested to configure it. Currently there are only two options - Image Cache Folder, and Window Size.

Image Cache Folder: The 3D plugin works by loading specially-drawn JPEG images and projecting them into the window. Therefore, it needs to know where to find the images. You should specify the folder that contains 'NULL.JPG'. If you download any image packs for mucks, they will go in this folder with their own sub-folder.

For example, FlipSide muck stores it's images in a folder named 'FlipSide'. The disk tree may look like this:

C:
+ Program Files
  + FliPTerm
    + Plugins
      + 3dGraphics
        + FlipSide
        + NULL.jpg
        + Readme.txt

You should specify the C:\Program Files\FlipTerm\Plugins\3Dgraphics folder, not including 'FlipSide'. The muck will know to look for it's images there. :)

Window Size: The window is normally sized at about 400x120 pixels. If this is small for you, select the 2x image size to double the window's scale. Note that you are more likely to see artifacting of lower quality images at the larger size.

In the future, this plugin will be able to download the images itself, and this folder will be where they end up.

Once you are connected to a muck that supports this plugin, a picture should appear in the box, along with a brief description in the title. By placing the mouse over the image, holding the left button, and rolling the mouse, you can 'pan' the image to look in all directions.

Server Use
----------
To set up the server, you need to install the MCPShow3D.MUF (from the src/MUF folder). Configure this program to run as the last _Arrive prop, and also configure it to run after negotiation on the libMCP program, as so:

@prog MCPShow3D.muf
<editor starts - note the dbref#>
1 999 d
i
<paste program here>
.
c
q
<editor exits>
@set #0=/_arrive/99_MCPShow3D:<dbref#>
@set $lib/mcp=/AfterEnd/99_MCPShow3D:<dbref#>

MCPShow3D has a several $def that must be set before use:
-MUCKFOLDER must be set to a short, unique name for your muck. It should not contain spaces or punctuation, and it must end with a backslash (\\). This is to prevent everyone's images from ending up in the same folder. Note
that you may only use a single folder - you may not nest additional folders (ie: 'flipside\' is okay, but
'flipside\world1\' is not).
-URL must be the base URL for your images, available via public HTTP 1.1 GET requests. MUCKFOLDER will be attached to the end of it.
Example: MUCKFOLDER is 'flipside\', URL is 'http://flipsidemuck.org/'. Images will be saved in the user's cache folder under the subdirectory 'flipside', and will be requested from the web from 'http://flipsidemuck.org/flipside/'

You may also wish to load the 'Set3D.muf' program and assign it an action, or you may wish to code a more elaborate system (perhaps embedding it into EditRoom or similar.)

Currently, three tags are used on the room:
/_Room3D/Tag: A textual tag that identifies the location and is added to the display window. There's a practical limit of 20-30 characters, although up to 128 are legal
/_Room3D/File: The filename of the image to display, no path is expected. 
Set3D lets you simply pass these two values as parameters.
/_Room3D/Updated: Timestamp of the last time this image was updated

Once the muck side is configured, you should package up your images and make them available to the users. (Automatic download will be available in the future.) The archive file should INCLUDE the name of your folder as defined in MCPShow3D, so that users need only extract the file into their Graphics folder. (All this will be greatly simplified once auto-download is added.)

Creating images
---------------
Images are easily created in any 3D program that permits panoramic views. The test images are 1120x420, but any image that approximates this aspect ratio will work fine, both larger and smaller. They must be stored as standard JPG, although both color and greyscale are supported. If you'd like to try hand drawing, the NULL.JPG image may be useful as a reference image, as it demonstrates the distortion expected in the images for an interior room.

If your 3D software does not support panoramas explicitly, you may be able to fake it by forcing it to render 360 degrees horizontally, and 110-180 degrees vertically. How exactly this is accomplished will vary from program to program and is beyond my ability to support.
